version: '3.7'

services:
  # server:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: boilerplate
  #   restart: unless-stopped
  #   depends_on:
  #     - mysqlDB
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - ./src:/app/src
  #   command:
  #     - 'yarn'
  #     - 'start:dev'

  mysqlDB:
    container_name: mysql_db
    image: mysql:latest
    ports:
      - 3306:3306
    restart: on-failure
    volumes:
      - ./data/mysql:/var/lib/mysql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: boilerplate
      MYSQL_USER: boilerplate
      MYSQL_PASSWORD: boilerplate
      TZ: Asia/Seoul

  # rabbitmq:
  #   image: rabbitmq:3.8-management
  #   container_name: rabbitmq
  #   volumes:
  #     - ./data/rabbitmq/logs:/var/log/rabbitmq/
  #     - ./data/rabbitmq/data:/var/lib/rabbitmq/
  #   ports:
  #     - '5672:5672'
  #     - '15672:15672'
  #   environment:
  #     RABBITMQ_DEFAULT_USER: admin
  #     RABBITMQ_DEFAULT_PASS: admin

  # redis:
  #   image: redis
  #   container_name: redis
  #   hostname: redis
  #   volumes:
  #     - ./data/redis:/data
  #   ports:
  #     - '6379:6379'
# version: '3.1'

# volumes:
#   postgres_data:

# services:
#   postgres:
#     image: postgres:14.7
#     container_name: postgres
#     # 5432로 포워딩 할 경우 host os 에 설치된 postgre와 겹칠 수 있으므로 host에 설치된 postgre를 내려야함
#     ports:
#       - '5434:5432'
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#       - POSTGRES_DB=postgres
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     restart: always
